{"version":3,"sources":["AircraftQueue.js","App.js","reportWebVitals.js","index.js"],"names":["AircraftQueue","useState","largePassenger","setLargePassenger","smallPassenger","setSmallPassenger","largeCargo","setLargeCargo","smallCargo","setSmallCargo","aircraftID","setAircraftID","size","type","selected","setSelected","dequeued","setDequeued","systemOn","setSystemOn","className","onClick","event","onChange","target","value","length","id","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ea56e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction AircraftQueue() {\n\n  const [largePassenger, setLargePassenger] = useState([]);\n  const [smallPassenger, setSmallPassenger] = useState([]);\n  const [largeCargo, setLargeCargo] = useState([]);\n  const [smallCargo, setSmallCargo] = useState([]);\n\n  const [aircraftID, setAircraftID] = useState(0);\n\n  const [selected, setSelected] = useState({\n    size: \"small\",\n    type: \"passenger\"\n  });\n\n  const [dequeued, setDequeued] = useState({});\n\n  const [systemOn, setSystemOn] = useState(false);\n\n  const bootSystem = (event) => {\n    setLargeCargo([])\n    setSmallPassenger([])\n    setLargeCargo([])\n    setSmallCargo([])\n    setAircraftID(0)\n    setDequeued({})\n    setSystemOn(!systemOn)\n  }\n\n  const changeSize = (event) => {\n    setSelected({\n      ...selected,\n      size: event.target.value\n    })\n  }\n\n  const changeType = (event) => {\n    setSelected({\n      ...selected,\n      type: event.target.value\n    })\n  }\n\n  const queueAircraft = (event) => {\n    if (selected.size == \"large\" && selected.type == \"passenger\") {\n      setLargePassenger([...largePassenger, aircraftID])\n    } else if (selected.size == \"small\" && selected.type == \"passenger\") {\n      setSmallPassenger([...smallPassenger, aircraftID])\n    } else if (selected.size == \"large\" && selected.type == \"cargo\") {\n      setLargeCargo([...largeCargo, aircraftID])\n    } else if (selected.size == \"small\" && selected.type == \"cargo\") {\n      setSmallCargo([...smallCargo, aircraftID])\n    }\n    setAircraftID(aircraftID + 1)\n  }\n\n  const dequeueAircraft = (event) => {\n    if (largePassenger.length > 0) {\n      setDequeued({\n        id: largePassenger[0],\n        size: \"large\",\n        type: \"passenger\"\n      })\n      setLargePassenger(largePassenger.slice(1))\n    } else if (smallPassenger.length > 0) {\n      setDequeued({\n        id: smallPassenger[0],\n        size: \"small\",\n        type: \"passenger\"\n      })\n      setSmallPassenger(smallPassenger.slice(1))\n    } else if (largeCargo.length > 0) {\n      setDequeued({\n        id: largeCargo[0],\n        size: \"large\",\n        type: \"cargo\"\n      })\n      setLargeCargo(largeCargo.slice(1))\n    } else if (smallCargo.length > 0) {\n      setDequeued({\n        id: smallCargo[0],\n        size: \"small\",\n        type: \"cargo\"\n      })\n      setSmallCargo(smallCargo.slice(1))\n    }\n  }\n\n  return (\n    <div className=\"aircraft-queue\">\n      <div className=\"container\">\n        <button onClick={bootSystem}>\n        {systemOn ? \"Turn off System\" : \"Turn on System\"}\n        </button>\n      </div>\n      <div className={`container ${systemOn ? \"\" : \"hidden\"}`}>\n        <select onChange={changeSize}>\n          <option value=\"small\">Small</option>\n          <option value=\"large\">Large</option>\n        </select>\n\n        <select onChange={changeType}>\n          <option value=\"passenger\">Passenger</option>\n          <option value=\"cargo\">Cargo</option>\n        </select>\n\n        <button onClick={queueAircraft}>Enqueue Aircraft</button>\n      </div>\n      <div className={`container dequeue ${systemOn ? \"\" : \"hidden\"}`}>\n        <button onClick={dequeueAircraft}>Dequeue Aircraft</button>\n        <div>\n          Last Aircraft Dequeued:\n        </div>\n        <div>\n          {dequeued.size ? `id:${dequeued.id}, size:${dequeued.size}, type:${dequeued.type}` : \"none\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AircraftQueue;\n","import './App.css';\nimport AircraftQueue from './AircraftQueue'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AircraftQueue />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}